# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for
# license information.
#
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.
# --------------------------------------------------------------------------
# pylint: disable=too-many-lines
# pylint: disable=too-many-statements

from knack.arguments import CLIArgumentType
from azure.cli.core.commands.parameters import (
    tags_type,
    resource_group_name_type,
    get_location_type
)
from azure.cli.core.commands.validators import get_default_location_from_resource_group
from azext_databricks.action import (
    AddSku,
    AddAuthorizations,
    AddCreatedBy,
    AddStorageAccountIdentity
)


def load_arguments(self, _):

    with self.argument_context('databricks workspace list') as c:
        c.argument('resource_group_name', resource_group_name_type)

    with self.argument_context('databricks workspace show') as c:
        c.argument('resource_group_name', resource_group_name_type)
        c.argument('workspace_name', help='The name of the workspace.')

    with self.argument_context('databricks workspace create') as c:
        c.argument('resource_group_name', resource_group_name_type)
        c.argument('workspace_name', help='The name of the workspace.')
        c.argument('tags', tags_type)
        c.argument('location', arg_type=get_location_type(self.cli_ctx),
                   validator=get_default_location_from_resource_group)
        c.argument('sku', action=AddSku, nargs='+', help='The SKU of the resource.')
        c.argument('managed_resource_group_id', help='The managed resource group Id.')
        c.argument('parameters', arg_type=CLIArgumentType(options_list=['--parameters'], help='The workspace\'s custom '
                   'parameters.'))
        c.argument('ui_definition_uri', help='The blob URI where the UI definition file is located.')
        c.argument('authorizations', action=AddAuthorizations, nargs='+',
                   help='The workspace provider authorizations.')
        c.argument('created_by', action=AddCreatedBy, nargs='+', help='Indicates the Object ID, PUID and Application ID'
                   ' of entity that created the workspace.')
        c.argument('updated_by', action=AddCreatedBy, nargs='+', help='Indicates the Object ID, PUID and Application ID'
                   ' of entity that last updated the workspace.')
        c.argument('storage_account_identity', action=AddStorageAccountIdentity, nargs='+', help='The details of Manage'
                   'd Identity of Storage Account')

    with self.argument_context('databricks workspace update') as c:
        c.argument('resource_group_name', resource_group_name_type)
        c.argument('workspace_name', help='The name of the workspace.')
        c.argument('tags', tags_type)

    with self.argument_context('databricks workspace delete') as c:
        c.argument('resource_group_name', resource_group_name_type)
        c.argument('workspace_name', help='The name of the workspace.')
